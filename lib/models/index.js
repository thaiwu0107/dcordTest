"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("reflect-metadata");
/* istanbul ignore next */
class GamaContext {
    constructor() {
        this.context = GamaContext.getContext();
    }
    getBean(name) {
        return this.context.getBean(name);
    }
    getConnectionNames() {
        return Object.keys(this.context._config.database);
    }
    static getConnectionNames() {
        return Object.keys(GamaContext.orm._config.database);
    }
    static async init(pathdb, pathBeansPath) {
        // tslint:disable-next-line:no-null-keyword
        this.orm = null;
        this.orm = await require('gama-orm')({
            beansPath: pathBeansPath,
            printSQL: true,
            database: pathdb
        });
        return this.orm;
    }
    static getBean(name) {
        return this.orm.getBean(name);
    }
    /**
     * 注意!!這是為了Mock注入的hook,單純為了注入依賴,非常規使用
     * 請不要隨意使用這個方法
     * @static
     * @param {*} mockOrm
     * @memberof Context
     */
    static setMockContext(mockOrm) {
        this.orm = mockOrm;
    }
    static getContext() {
        return GamaContext.orm;
    }
}
exports.GamaContext = GamaContext;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2dndHRvbzQ0L0Rlc2t0b3AvYmFzZUFQSS9zcmMvIiwic291cmNlcyI6WyJtb2RlbHMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSw0QkFBMEI7QUFFMUIsMEJBQTBCO0FBQzFCO0lBR0k7UUFDSSxJQUFJLENBQUMsT0FBTyxHQUFHLFdBQVcsQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUM1QyxDQUFDO0lBQ00sT0FBTyxDQUFDLElBQVk7UUFDdkIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBQ00sa0JBQWtCO1FBQ3JCLE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBQ00sTUFBTSxDQUFDLGtCQUFrQjtRQUM1QixPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDekQsQ0FBQztJQUVNLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxhQUFhO1FBQzFDLDJDQUEyQztRQUMzQyxJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQztRQUNoQixJQUFJLENBQUMsR0FBRyxHQUFHLE1BQU0sT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ2pDLFNBQVMsRUFBRSxhQUFhO1lBQ3hCLFFBQVEsRUFBRSxJQUFJO1lBQ2QsUUFBUSxFQUFFLE1BQU07U0FDbkIsQ0FBQyxDQUFDO1FBRUgsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDO0lBQ3BCLENBQUM7SUFDTSxNQUFNLENBQUMsT0FBTyxDQUFDLElBQVk7UUFDOUIsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUQ7Ozs7OztPQU1HO0lBQ0ksTUFBTSxDQUFDLGNBQWMsQ0FBQyxPQUFZO1FBQ3JDLElBQUksQ0FBQyxHQUFHLEdBQUcsT0FBTyxDQUFDO0lBQ3ZCLENBQUM7SUFDTSxNQUFNLENBQUMsVUFBVTtRQUNwQixPQUFPLFdBQVcsQ0FBQyxHQUFHLENBQUM7SUFDM0IsQ0FBQztDQUVKO0FBN0NELGtDQTZDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGxvZzRqcyBmcm9tICdrb2EtbG9nNCc7XG5pbXBvcnQgKiBhcyBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgJ3JlZmxlY3QtbWV0YWRhdGEnO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuZXhwb3J0IGNsYXNzIEdhbWFDb250ZXh0IHtcbiAgICBwdWJsaWMgY29udGV4dDogYW55O1xuICAgIHB1YmxpYyBzdGF0aWMgb3JtOiBhbnk7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuY29udGV4dCA9IEdhbWFDb250ZXh0LmdldENvbnRleHQoKTtcbiAgICB9XG4gICAgcHVibGljIGdldEJlYW4obmFtZTogc3RyaW5nKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRleHQuZ2V0QmVhbihuYW1lKTtcbiAgICB9XG4gICAgcHVibGljIGdldENvbm5lY3Rpb25OYW1lcygpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuY29udGV4dC5fY29uZmlnLmRhdGFiYXNlKTtcbiAgICB9XG4gICAgcHVibGljIHN0YXRpYyBnZXRDb25uZWN0aW9uTmFtZXMoKSB7XG4gICAgICAgIHJldHVybiBPYmplY3Qua2V5cyhHYW1hQ29udGV4dC5vcm0uX2NvbmZpZy5kYXRhYmFzZSk7XG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBhc3luYyBpbml0KHBhdGhkYiwgcGF0aEJlYW5zUGF0aCkge1xuICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tbnVsbC1rZXl3b3JkXG4gICAgICAgIHRoaXMub3JtID0gbnVsbDtcbiAgICAgICAgdGhpcy5vcm0gPSBhd2FpdCByZXF1aXJlKCdnYW1hLW9ybScpKHtcbiAgICAgICAgICAgIGJlYW5zUGF0aDogcGF0aEJlYW5zUGF0aCxcbiAgICAgICAgICAgIHByaW50U1FMOiB0cnVlLFxuICAgICAgICAgICAgZGF0YWJhc2U6IHBhdGhkYlxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gdGhpcy5vcm07XG4gICAgfVxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0QmVhbihuYW1lOiBzdHJpbmcpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3JtLmdldEJlYW4obmFtZSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5rOo5oSPISHpgJnmmK/ngrrkuoZNb2Nr5rOo5YWl55qEaG9vayzllq7ntJTngrrkuobms6jlhaXkvp3os7Qs6Z2e5bi46KaP5L2/55SoXG4gICAgICog6KuL5LiN6KaB6Zqo5oSP5L2/55So6YCZ5YCL5pa55rOVXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBwYXJhbSB7Kn0gbW9ja09ybVxuICAgICAqIEBtZW1iZXJvZiBDb250ZXh0XG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBzZXRNb2NrQ29udGV4dChtb2NrT3JtOiBhbnkpIHtcbiAgICAgICAgdGhpcy5vcm0gPSBtb2NrT3JtO1xuICAgIH1cbiAgICBwdWJsaWMgc3RhdGljIGdldENvbnRleHQoKSB7XG4gICAgICAgIHJldHVybiBHYW1hQ29udGV4dC5vcm07XG4gICAgfVxuXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVRyYW5zYWN0aW9uIHtcbiAgICBiZWdpbigpOiBQcm9taXNlPGFueT47XG4gICAgY29tbWl0KCk6IFByb21pc2U8YW55PjtcbiAgICByb2xsYmFjaygpOiBQcm9taXNlPGFueT47XG4gICAgZ2V0RGFvKHRhYmxlTmFtZTogc3RyaW5nKTogYW55O1xufVxuIl19